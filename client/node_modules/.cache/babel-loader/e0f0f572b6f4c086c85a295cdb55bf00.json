{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-8363af48\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"audios\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AudioFile = _resolveComponent(\"AudioFile\");\n\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.audios, audio => {\n    return _openBlock(), _createBlock(_component_AudioFile, {\n      audio: audio\n    }, null, 8\n    /* PROPS */\n    , [\"audio\"]);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;;;;AACWA,OAAK,EAAC;;;;;uBAAfC,oBAEU,SAFV,cAEU,oBADRA,oBAAyDC,SAAzD,EAAyD,IAAzD,EAAyDC,YAA9BC,YAA8B,EAAvCC,KAAe,IAAV;yBAAvBC,aAAyDC,oBAAzD,EAAyD;AAAfF,WAAK,EAAEA;AAAQ,KAAzD,EAAsD,IAAtD,EAAsD;AAAA;AAAtD,MAAsD,SAAtD;GAAyD,CAAzD;;AAAA,GACQ,EAFV","names":["class","_createElementBlock","_Fragment","_renderList","$data","audio","_createBlock","_component_AudioFile"],"sourceRoot":"","sources":["/Users/apple/Desktop/roku-streaming/client/src/views/AudiosView.vue"],"sourcesContent":["<template>\r\n  <section class=\"audios\">\r\n    <AudioFile v-for=\"audio of audios\" v-bind:audio=\"audio\"/>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport jwt_decode from \"jwt-decode\"\r\nimport fetchIntercept from \"@/utils/fetchIntercept\"\r\nimport AudioFile from \"@/components/AudioFile\"\r\n\r\nexport default {\r\n  name: 'audioView',\r\n  mounted() {\r\n    const user = jwt_decode(localStorage.getItem('accessToken'))\r\n    console.log(user)\r\n    fetchIntercept(`/audios/getAll/${user.typeOfAccount}`, {\r\n      headers: {\r\n        'Content-Type': 'Application/json'\r\n      },\r\n      method: 'GET'\r\n    }).then(({response, data}) => {\r\n      console.log(response)\r\n      if (response.status === 200) {\r\n        console.log(data)\r\n        this.audios = data\r\n        console.log(this.audios)\r\n      }\r\n    })\r\n\r\n  },\r\n  components: {\r\n    AudioFile\r\n  },\r\n  data(){\r\n    return {\r\n      audios: []\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.audios {\r\n  max-width: 1280px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}